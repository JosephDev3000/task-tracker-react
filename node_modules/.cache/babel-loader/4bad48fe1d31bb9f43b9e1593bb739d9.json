{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joseph Briones\\\\Desktop\\\\web proj\\\\react-task-tracker\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport { useState, useEffect } from \"react\";\nimport AddTask from './components/AddTask';\nimport Footer from './components/Footer';\nimport About from './components/About';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n    getTasks();\n  }, []);\n\n  //fetch tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n    return data;\n  };\n\n  //fetch task\n  const fetchTask = async id => {\n    const res = await fetch(`http://localhost:5000/tasks/id`);\n    const data = await res.json();\n    return data;\n  };\n\n  //Add task\n  const addTask = async task => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      header: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]);\n\n    // const id = Math.floor(Math.random() * 10000) + 1\n\n    // const newTask = {id, ...task}\n    // setTasks([...tasks, newTask])\n  };\n\n  //Delete Task\n  const deleteTask = async id => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    });\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  //Toggle Reminder\n  const toggleReminder = async id => {\n    const taskToToggle = await fetchTask(id);\n    const updTask = {\n      ...taskToToggle,\n      reminder: !taskToToggle.reminder\n    };\n    const res = await fetch(`http://localhost:5000/tasks/$(id)`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updTask)\n    });\n    const data = await res.json();\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      reminder: data.reminder\n    } : task));\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onAdd: () => setShowAddTask(!showAddTask),\n        showAdd: showAddTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n        onAdd: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 23\n      }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n        tasks: tasks,\n        onDelete: deleteTask,\n        onToggle: toggleReminder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 28\n      }, this) : 'No tasks to show', /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"pA4snfDjny2P+O1a+6NjXQ6HzBU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Tasks","useState","useEffect","AddTask","Footer","About","BrowserRouter","Router","Route","App","showAddTask","setShowAddTask","tasks","setTasks","getTasks","tasksFromServer","fetchTasks","res","fetch","data","json","fetchTask","id","addTask","task","method","header","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","reminder","headers","map","length"],"sources":["C:/Users/Joseph Briones/Desktop/web proj/react-task-tracker/src/App.js"],"sourcesContent":["import Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport { useState, useEffect } from \"react\"\nimport AddTask from './components/AddTask'\nimport Footer from './components/Footer'\nimport About from './components/About'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\n\nfunction App () {\n  const [showAddTask, setShowAddTask] = useState(false)\n\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n\n  //fetch tasks\n  const fetchTasks = async() => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n\n    return data\n  }\n\n  //fetch task\n  const fetchTask = async(id) => {\n    const res = await fetch(`http://localhost:5000/tasks/id`)\n    const data = await res.json()\n\n    return data\n  }\n\n  //Add task\n  const addTask = async(task) => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      header: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task),\n    })\n\n    const data = await res.json()\n\n    setTasks([...tasks,data])\n\n    // const id = Math.floor(Math.random() * 10000) + 1\n\n    // const newTask = {id, ...task}\n    // setTasks([...tasks, newTask])\n  }\n\n  //Delete Task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE',\n    })\n\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  //Toggle Reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id)\n    const updTask ={...taskToToggle, \n      reminder:!taskToToggle.reminder\n    }\n\n    const res = await fetch(`http://localhost:5000/tasks/$(id)`, {\n      method: 'PUT',\n      headers: {\n        'Content-type' : 'application/json'\n      },\n      body: JSON.stringify(updTask)\n    })\n\n    const data = await res.json()\n\n    setTasks(tasks.map((task) => task.id === id ? {...task, reminder: data.reminder}:task \n    )\n  )\n}\n\n  return (\n    <Router>\n    <div className=\"App\">\n      <Header \n      onAdd={() => setShowAddTask(!showAddTask)} \n      showAdd={showAddTask}\n      />\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? (<Tasks tasks={tasks} onDelete={deleteTask} \n      onToggle={toggleReminder}/>) : ('No tasks to show')}\n\n      {/* <Route \n      path='/' \n      exact \n      render={(props) => (\n        <>\n          {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? (<Tasks tasks={tasks} onDelete={deleteTask} \n      onToggle={toggleReminder}/>) : ('No tasks to show')}\n        </>\n\n      )}/> */}\n      {/* <Route path='/about' component={About}/> */}\n      <Footer/>\n    </div>\n    </Router>\n  );\n}\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}