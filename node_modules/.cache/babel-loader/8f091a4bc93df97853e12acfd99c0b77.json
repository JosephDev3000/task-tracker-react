{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joseph Briones\\\\Desktop\\\\web proj\\\\react-task-tracker\\\\src\\\\components\\\\Tasks.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: 'Doctor appointment',\n    day: 'feb 1 at 1 30 pm',\n    reminder: true\n  }, {\n    id: 2,\n    text: 'Dentist appointment',\n    day: 'march 10 at 2 30 pm',\n    reminder: true\n  }, {\n    id: 3,\n    text: 'WOrk appointment',\n    day: 'april 11 at 11 30 pm',\n    reminder: false\n  }]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: task.text\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 31\n    }, this))\n  }, void 0, false);\n};\n_s(Tasks, \"uLkCcJgfW+ToonrgbSytkAbNGGc=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["useState","Tasks","tasks","setTasks","id","text","day","reminder","map","task"],"sources":["C:/Users/Joseph Briones/Desktop/web proj/react-task-tracker/src/components/Tasks.js"],"sourcesContent":["import { useState } from \"react\"\r\n\r\nconst Tasks = () => {\r\n    const [tasks, setTasks] = useState([\r\n        {\r\n            id: 1,\r\n            text: 'Doctor appointment',\r\n            day: 'feb 1 at 1 30 pm',\r\n            reminder: true,\r\n        },\r\n        {\r\n            id: 2,\r\n            text: 'Dentist appointment',\r\n            day: 'march 10 at 2 30 pm',\r\n            reminder: true,\r\n        },\r\n        {\r\n            id: 3,\r\n            text: 'WOrk appointment',\r\n            day: 'april 11 at 11 30 pm',\r\n            reminder: false,\r\n        }\r\n    ])\r\n\r\n    return (\r\n        <>\r\n        {tasks.map((task) => (<h3 key={task.id}>{task.text}</h3>))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAA;AAAA;AAEhC,MAAMC,KAAK,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,CAC/B;IACII,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,oBAAoB;IAC1BC,GAAG,EAAE,kBAAkB;IACvBC,QAAQ,EAAE;EACd,CAAC,EACD;IACIH,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,qBAAqB;IAC3BC,GAAG,EAAE,qBAAqB;IAC1BC,QAAQ,EAAE;EACd,CAAC,EACD;IACIH,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,kBAAkB;IACxBC,GAAG,EAAE,sBAAsB;IAC3BC,QAAQ,EAAE;EACd,CAAC,CACJ,CAAC;EAEF,oBACI;IAAA,UACCL,KAAK,CAACM,GAAG,CAAEC,IAAI,iBAAM;MAAA,UAAmBA,IAAI,CAACJ;IAAI,GAAnBI,IAAI,CAACL,EAAE;MAAA;MAAA;MAAA;IAAA,QAAmB;EAAC,iBACvD;AAEX,CAAC;AAAA,GA3BKH,KAAK;AAAA,KAALA,KAAK;AA6BX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module"}